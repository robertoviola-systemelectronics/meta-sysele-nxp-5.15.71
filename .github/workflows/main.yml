name: Yocto Build
on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: Setup Persistent Cache Directories
        run: |
          # Create persistent directories for all types of cache
          sudo mkdir -p /mnt/yocto-persistent/downloads
          sudo mkdir -p /mnt/yocto-persistent/sstate-cache
          sudo mkdir -p /mnt/yocto-persistent/tmp
          sudo mkdir -p /mnt/yocto-persistent/ccache
          
          # Set appropriate permissions
          sudo chmod -R 777 /mnt/yocto-persistent
          
          # Create symlinks if needed
          ln -sf /mnt/yocto-persistent/ccache $HOME/.ccache
          
          df -h

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: yocto-build-${{ github.ref }}
          path: /mnt/yocto-persistent/ccache

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gawk wget git diffstat unzip texinfo gcc build-essential \
            chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils \
            iputils-ping python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev \
            python3-subunit mesa-common-dev zstd liblz4-tool file locales libacl1 \
            curl python-is-python3 bmap-tools ccache
          sudo locale-gen en_US.UTF-8

      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "${HOME}/bin" >> $GITHUB_PATH

      - name: Initialize Yocto Environment
        run: |
          mkdir yocto-astrial
          cd yocto-astrial
          repo init -u https://github.com/nxp-imx/imx-manifest -b imx-linux-kirkstone -m imx-5.15.71-2.2.0.xml
          mkdir -p .repo/local_manifests
          wget --directory-prefix .repo/local_manifests https://raw.githubusercontent.com/System-Electronics/meta-sysele-nxp-5.15.71/main/manifest/astrial-5.15.71.xml
          repo sync
          source astrial-setup-env -b build
          
          # Cache configuration
          cat >> conf/local.conf << EOF
          # Cache directories configuration
          SSTATE_DIR = "/mnt/yocto-persistent/sstate-cache"
          DL_DIR = "/mnt/yocto-persistent/downloads"
          TMPDIR = "/mnt/yocto-persistent/tmp"
          
          # CCache configuration
          INHERIT += "ccache"
          CCACHE_TOP_DIR = "/mnt/yocto-persistent/ccache"
          CCACHE_DIR = "/mnt/yocto-persistent/ccache"
          
          # Performance optimizations
          BB_NUMBER_THREADS = "\${@oe.utils.cpu_count()}"
          PARALLEL_MAKE = "-j \${@oe.utils.cpu_count()}"
          
          # Work directory cleanup
          INHERIT += "rm_work"
          RM_WORK_EXCLUDE = ""
          
          # Build history (optional, for debugging)
          INHERIT += "buildhistory"
          BUILDHISTORY_COMMIT = "0"
          
          # Additional cache optimizations
          BB_HASHSERVE_UPSTREAM = "hashserv.yocto.io:8687"
          SSTATE_MIRRORS ?= "file://.* http://sstate.yoctoproject.org/all/PATH;downloadfilename=PATH"
          EOF

      - name: Build Image
        run: |
          cd yocto-astrial
          source astrial-setup-env -b build
          bitbake system-astrial-image

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: yocto-build
          path: |
            yocto-astrial/build/tmp/deploy/images/astrial-imx8mp/imx-boot-astrial-imx8mp-sd.bin-flash_evk
            yocto-astrial/build/tmp/deploy/images/astrial-imx8mp/system-astrial-image-astrial-imx8mp-*.rootfs.wic.zst
